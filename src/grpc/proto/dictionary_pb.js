// source: proto/dictionary.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dictionary.ApplicationRequest', null, global);
goog.exportSymbol('proto.dictionary.Browser', null, global);
goog.exportSymbol('proto.dictionary.ContextInfo', null, global);
goog.exportSymbol('proto.dictionary.EntityRequest', null, global);
goog.exportSymbol('proto.dictionary.Field', null, global);
goog.exportSymbol('proto.dictionary.FieldCondition', null, global);
goog.exportSymbol('proto.dictionary.FieldDefinition', null, global);
goog.exportSymbol('proto.dictionary.FieldGroup', null, global);
goog.exportSymbol('proto.dictionary.FieldRequest', null, global);
goog.exportSymbol('proto.dictionary.Form', null, global);
goog.exportSymbol('proto.dictionary.MessageText', null, global);
goog.exportSymbol('proto.dictionary.Process', null, global);
goog.exportSymbol('proto.dictionary.Reference', null, global);
goog.exportSymbol('proto.dictionary.ReferenceRequest', null, global);
goog.exportSymbol('proto.dictionary.ReportExportType', null, global);
goog.exportSymbol('proto.dictionary.Tab', null, global);
goog.exportSymbol('proto.dictionary.ValidationRule', null, global);
goog.exportSymbol('proto.dictionary.ValidationRuleRequest', null, global);
goog.exportSymbol('proto.dictionary.Window', null, global);
goog.exportSymbol('proto.dictionary.ZoomWindow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ApplicationRequest.displayName = 'proto.dictionary.ApplicationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.EntityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.EntityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.EntityRequest.displayName = 'proto.dictionary.EntityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.FieldRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldRequest.displayName = 'proto.dictionary.FieldRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ReferenceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ReferenceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ReferenceRequest.displayName = 'proto.dictionary.ReferenceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ValidationRuleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ValidationRuleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ValidationRuleRequest.displayName = 'proto.dictionary.ValidationRuleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ValidationRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ValidationRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ValidationRule.displayName = 'proto.dictionary.ValidationRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Window = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Window.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Window, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Window.displayName = 'proto.dictionary.Window';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Tab = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Tab.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Tab, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Tab.displayName = 'proto.dictionary.Tab';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Field.displayName = 'proto.dictionary.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ContextInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ContextInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ContextInfo.displayName = 'proto.dictionary.ContextInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.MessageText = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.MessageText, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.MessageText.displayName = 'proto.dictionary.MessageText';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.FieldGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldGroup.displayName = 'proto.dictionary.FieldGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.FieldDefinition.repeatedFields_, null);
};
goog.inherits(proto.dictionary.FieldDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldDefinition.displayName = 'proto.dictionary.FieldDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.FieldCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldCondition.displayName = 'proto.dictionary.FieldCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Process = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Process.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Process, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Process.displayName = 'proto.dictionary.Process';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Form = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.Form, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Form.displayName = 'proto.dictionary.Form';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Browser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Browser.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Browser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Browser.displayName = 'proto.dictionary.Browser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ZoomWindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ZoomWindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ZoomWindow.displayName = 'proto.dictionary.ZoomWindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Reference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Reference.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Reference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Reference.displayName = 'proto.dictionary.Reference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ReportExportType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ReportExportType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ReportExportType.displayName = 'proto.dictionary.ReportExportType';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionuuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    language: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ApplicationRequest}
 */
proto.dictionary.ApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ApplicationRequest;
  return proto.dictionary.ApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ApplicationRequest}
 */
proto.dictionary.ApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionuuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ApplicationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionuuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sessionUuid = 1;
 * @return {string}
 */
proto.dictionary.ApplicationRequest.prototype.getSessionuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ApplicationRequest} returns this
 */
proto.dictionary.ApplicationRequest.prototype.setSessionuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string language = 2;
 * @return {string}
 */
proto.dictionary.ApplicationRequest.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ApplicationRequest} returns this
 */
proto.dictionary.ApplicationRequest.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.EntityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.EntityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.EntityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.EntityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applicationrequest: (f = msg.getApplicationrequest()) && proto.dictionary.ApplicationRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.EntityRequest}
 */
proto.dictionary.EntityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.EntityRequest;
  return proto.dictionary.EntityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.EntityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.EntityRequest}
 */
proto.dictionary.EntityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = new proto.dictionary.ApplicationRequest;
      reader.readMessage(value,proto.dictionary.ApplicationRequest.deserializeBinaryFromReader);
      msg.setApplicationrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.EntityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.EntityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.EntityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.EntityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplicationrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dictionary.ApplicationRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.EntityRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.EntityRequest} returns this
 */
proto.dictionary.EntityRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.EntityRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.EntityRequest} returns this
 */
proto.dictionary.EntityRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ApplicationRequest applicationRequest = 3;
 * @return {?proto.dictionary.ApplicationRequest}
 */
proto.dictionary.EntityRequest.prototype.getApplicationrequest = function() {
  return /** @type{?proto.dictionary.ApplicationRequest} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ApplicationRequest, 3));
};


/**
 * @param {?proto.dictionary.ApplicationRequest|undefined} value
 * @return {!proto.dictionary.EntityRequest} returns this
*/
proto.dictionary.EntityRequest.prototype.setApplicationrequest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.EntityRequest} returns this
 */
proto.dictionary.EntityRequest.prototype.clearApplicationrequest = function() {
  return this.setApplicationrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.EntityRequest.prototype.hasApplicationrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationrequest: (f = msg.getApplicationrequest()) && proto.dictionary.ApplicationRequest.toObject(includeInstance, f),
    fielduuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columnuuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    elementuuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tablename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    columnname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    elementcolumnname: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldRequest}
 */
proto.dictionary.FieldRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldRequest;
  return proto.dictionary.FieldRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldRequest}
 */
proto.dictionary.FieldRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dictionary.ApplicationRequest;
      reader.readMessage(value,proto.dictionary.ApplicationRequest.deserializeBinaryFromReader);
      msg.setApplicationrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFielduuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnuuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementuuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTablename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementcolumnname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dictionary.ApplicationRequest.serializeBinaryToWriter
    );
  }
  f = message.getFielduuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnuuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getElementuuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTablename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColumnname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getElementcolumnname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional ApplicationRequest applicationRequest = 1;
 * @return {?proto.dictionary.ApplicationRequest}
 */
proto.dictionary.FieldRequest.prototype.getApplicationrequest = function() {
  return /** @type{?proto.dictionary.ApplicationRequest} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ApplicationRequest, 1));
};


/**
 * @param {?proto.dictionary.ApplicationRequest|undefined} value
 * @return {!proto.dictionary.FieldRequest} returns this
*/
proto.dictionary.FieldRequest.prototype.setApplicationrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.clearApplicationrequest = function() {
  return this.setApplicationrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.FieldRequest.prototype.hasApplicationrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string fieldUuid = 2;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getFielduuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setFielduuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string columnUuid = 3;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getColumnuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setColumnuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string elementUuid = 4;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getElementuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setElementuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tableName = 5;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getTablename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setTablename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string columnName = 6;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getColumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setColumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string elementColumnName = 7;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getElementcolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setElementcolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ReferenceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ReferenceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ReferenceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReferenceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationrequest: (f = msg.getApplicationrequest()) && proto.dictionary.ApplicationRequest.toObject(includeInstance, f),
    referenceuuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columnname: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ReferenceRequest}
 */
proto.dictionary.ReferenceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ReferenceRequest;
  return proto.dictionary.ReferenceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ReferenceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ReferenceRequest}
 */
proto.dictionary.ReferenceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dictionary.ApplicationRequest;
      reader.readMessage(value,proto.dictionary.ApplicationRequest.deserializeBinaryFromReader);
      msg.setApplicationrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceuuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ReferenceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ReferenceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ReferenceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReferenceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dictionary.ApplicationRequest.serializeBinaryToWriter
    );
  }
  f = message.getReferenceuuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ApplicationRequest applicationRequest = 1;
 * @return {?proto.dictionary.ApplicationRequest}
 */
proto.dictionary.ReferenceRequest.prototype.getApplicationrequest = function() {
  return /** @type{?proto.dictionary.ApplicationRequest} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ApplicationRequest, 1));
};


/**
 * @param {?proto.dictionary.ApplicationRequest|undefined} value
 * @return {!proto.dictionary.ReferenceRequest} returns this
*/
proto.dictionary.ReferenceRequest.prototype.setApplicationrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.ReferenceRequest} returns this
 */
proto.dictionary.ReferenceRequest.prototype.clearApplicationrequest = function() {
  return this.setApplicationrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.ReferenceRequest.prototype.hasApplicationrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string referenceUuid = 2;
 * @return {string}
 */
proto.dictionary.ReferenceRequest.prototype.getReferenceuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReferenceRequest} returns this
 */
proto.dictionary.ReferenceRequest.prototype.setReferenceuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string columnName = 3;
 * @return {string}
 */
proto.dictionary.ReferenceRequest.prototype.getColumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReferenceRequest} returns this
 */
proto.dictionary.ReferenceRequest.prototype.setColumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ValidationRuleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ValidationRuleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ValidationRuleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ValidationRuleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationrequest: (f = msg.getApplicationrequest()) && proto.dictionary.ApplicationRequest.toObject(includeInstance, f),
    validationruleuuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ValidationRuleRequest}
 */
proto.dictionary.ValidationRuleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ValidationRuleRequest;
  return proto.dictionary.ValidationRuleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ValidationRuleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ValidationRuleRequest}
 */
proto.dictionary.ValidationRuleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dictionary.ApplicationRequest;
      reader.readMessage(value,proto.dictionary.ApplicationRequest.deserializeBinaryFromReader);
      msg.setApplicationrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationruleuuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ValidationRuleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ValidationRuleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ValidationRuleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ValidationRuleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dictionary.ApplicationRequest.serializeBinaryToWriter
    );
  }
  f = message.getValidationruleuuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ApplicationRequest applicationRequest = 1;
 * @return {?proto.dictionary.ApplicationRequest}
 */
proto.dictionary.ValidationRuleRequest.prototype.getApplicationrequest = function() {
  return /** @type{?proto.dictionary.ApplicationRequest} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ApplicationRequest, 1));
};


/**
 * @param {?proto.dictionary.ApplicationRequest|undefined} value
 * @return {!proto.dictionary.ValidationRuleRequest} returns this
*/
proto.dictionary.ValidationRuleRequest.prototype.setApplicationrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.ValidationRuleRequest} returns this
 */
proto.dictionary.ValidationRuleRequest.prototype.clearApplicationrequest = function() {
  return this.setApplicationrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.ValidationRuleRequest.prototype.hasApplicationrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string validationRuleUuid = 2;
 * @return {string}
 */
proto.dictionary.ValidationRuleRequest.prototype.getValidationruleuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRuleRequest} returns this
 */
proto.dictionary.ValidationRuleRequest.prototype.setValidationruleuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ValidationRule.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ValidationRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ValidationRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ValidationRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    validationruleuuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    validationcode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ValidationRule}
 */
proto.dictionary.ValidationRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ValidationRule;
  return proto.dictionary.ValidationRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ValidationRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ValidationRule}
 */
proto.dictionary.ValidationRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationruleuuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ValidationRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ValidationRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ValidationRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ValidationRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidationruleuuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValidationcode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string validationRuleUuid = 1;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getValidationruleuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setValidationruleuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string validationCode = 2;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getValidationcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setValidationcode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Window.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Window.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Window.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Window} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Window.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    issotrx: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    windowtype: jspb.Message.getFieldWithDefault(msg, 8, ""),
    contextinfo: (f = msg.getContextinfo()) && proto.dictionary.ContextInfo.toObject(includeInstance, f),
    tabsList: jspb.Message.toObjectList(msg.getTabsList(),
    proto.dictionary.Tab.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Window}
 */
proto.dictionary.Window.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Window;
  return proto.dictionary.Window.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Window} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Window}
 */
proto.dictionary.Window.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssotrx(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWindowtype(value);
      break;
    case 9:
      var value = new proto.dictionary.ContextInfo;
      reader.readMessage(value,proto.dictionary.ContextInfo.deserializeBinaryFromReader);
      msg.setContextinfo(value);
      break;
    case 10:
      var value = new proto.dictionary.Tab;
      reader.readMessage(value,proto.dictionary.Tab.deserializeBinaryFromReader);
      msg.addTabs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Window.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Window.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Window} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Window.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIssotrx();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getWindowtype();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContextinfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.dictionary.ContextInfo.serializeBinaryToWriter
    );
  }
  f = message.getTabsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.dictionary.Tab.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Window.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Window.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Window.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Window.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Window.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool isActive = 6;
 * @return {boolean}
 */
proto.dictionary.Window.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool isSOTrx = 7;
 * @return {boolean}
 */
proto.dictionary.Window.prototype.getIssotrx = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setIssotrx = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string windowType = 8;
 * @return {string}
 */
proto.dictionary.Window.prototype.getWindowtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setWindowtype = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional ContextInfo contextInfo = 9;
 * @return {?proto.dictionary.ContextInfo}
 */
proto.dictionary.Window.prototype.getContextinfo = function() {
  return /** @type{?proto.dictionary.ContextInfo} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ContextInfo, 9));
};


/**
 * @param {?proto.dictionary.ContextInfo|undefined} value
 * @return {!proto.dictionary.Window} returns this
*/
proto.dictionary.Window.prototype.setContextinfo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.clearContextinfo = function() {
  return this.setContextinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Window.prototype.hasContextinfo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated Tab tabs = 10;
 * @return {!Array<!proto.dictionary.Tab>}
 */
proto.dictionary.Window.prototype.getTabsList = function() {
  return /** @type{!Array<!proto.dictionary.Tab>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Tab, 10));
};


/**
 * @param {!Array<!proto.dictionary.Tab>} value
 * @return {!proto.dictionary.Window} returns this
*/
proto.dictionary.Window.prototype.setTabsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.dictionary.Tab=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Tab}
 */
proto.dictionary.Window.prototype.addTabs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.dictionary.Tab, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.clearTabsList = function() {
  return this.setTabsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Tab.repeatedFields_ = [34,35];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Tab.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Tab.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Tab} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Tab.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tablename: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 7, 0),
    tablevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    issinglerow: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isadvancedtab: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    ishastree: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isinfotab: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    issorttab: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    istranslationtab: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    isreadonly: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    isinsertrecord: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    isview: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isdeleteable: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    isdocument: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    ischangelog: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    accesslevel: jspb.Message.getFieldWithDefault(msg, 22, 0),
    linkcolumnname: jspb.Message.getFieldWithDefault(msg, 23, ""),
    sortordercolumnname: jspb.Message.getFieldWithDefault(msg, 24, ""),
    sortyesnocolumnname: jspb.Message.getFieldWithDefault(msg, 25, ""),
    parentcolumnname: jspb.Message.getFieldWithDefault(msg, 26, ""),
    displaylogic: jspb.Message.getFieldWithDefault(msg, 27, ""),
    commitwarning: jspb.Message.getFieldWithDefault(msg, 28, ""),
    query: jspb.Message.getFieldWithDefault(msg, 29, ""),
    whereclause: jspb.Message.getFieldWithDefault(msg, 30, ""),
    orderbyclause: jspb.Message.getFieldWithDefault(msg, 31, ""),
    parenttabuuid: jspb.Message.getFieldWithDefault(msg, 32, ""),
    contextinfo: (f = msg.getContextinfo()) && proto.dictionary.ContextInfo.toObject(includeInstance, f),
    processesList: jspb.Message.toObjectList(msg.getProcessesList(),
    proto.dictionary.Process.toObject, includeInstance),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.dictionary.Field.toObject, includeInstance),
    fieldgroup: (f = msg.getFieldgroup()) && proto.dictionary.FieldGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Tab}
 */
proto.dictionary.Tab.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Tab;
  return proto.dictionary.Tab.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Tab} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Tab}
 */
proto.dictionary.Tab.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTablename(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequence(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTablevel(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssinglerow(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsadvancedtab(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIshastree(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsinfotab(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssorttab(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstranslationtab(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsreadonly(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsinsertrecord(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsview(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdeleteable(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdocument(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIschangelog(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccesslevel(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkcolumnname(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortordercolumnname(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortyesnocolumnname(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentcolumnname(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaylogic(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommitwarning(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhereclause(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderbyclause(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setParenttabuuid(value);
      break;
    case 33:
      var value = new proto.dictionary.ContextInfo;
      reader.readMessage(value,proto.dictionary.ContextInfo.deserializeBinaryFromReader);
      msg.setContextinfo(value);
      break;
    case 34:
      var value = new proto.dictionary.Process;
      reader.readMessage(value,proto.dictionary.Process.deserializeBinaryFromReader);
      msg.addProcesses(value);
      break;
    case 35:
      var value = new proto.dictionary.Field;
      reader.readMessage(value,proto.dictionary.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 36:
      var value = new proto.dictionary.FieldGroup;
      reader.readMessage(value,proto.dictionary.FieldGroup.deserializeBinaryFromReader);
      msg.setFieldgroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Tab.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Tab.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Tab} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Tab.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTablename();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTablevel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIssinglerow();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsadvancedtab();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIshastree();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsinfotab();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIssorttab();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIstranslationtab();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getIsreadonly();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIsinsertrecord();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsview();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsdeleteable();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getIsdocument();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getIschangelog();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getAccesslevel();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getLinkcolumnname();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getSortordercolumnname();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getSortyesnocolumnname();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getParentcolumnname();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getDisplaylogic();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCommitwarning();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getWhereclause();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getOrderbyclause();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getParenttabuuid();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getContextinfo();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.dictionary.ContextInfo.serializeBinaryToWriter
    );
  }
  f = message.getProcessesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      34,
      f,
      proto.dictionary.Process.serializeBinaryToWriter
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      35,
      f,
      proto.dictionary.Field.serializeBinaryToWriter
    );
  }
  f = message.getFieldgroup();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.dictionary.FieldGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tableName = 6;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getTablename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setTablename = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 sequence = 7;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 tabLevel = 8;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getTablevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setTablevel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool isActive = 9;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool isSingleRow = 10;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIssinglerow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIssinglerow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isAdvancedTab = 11;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsadvancedtab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsadvancedtab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isHasTree = 12;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIshastree = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIshastree = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool isInfoTab = 13;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsinfotab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsinfotab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool isSortTab = 14;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIssorttab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIssorttab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool isTranslationTab = 15;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIstranslationtab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIstranslationtab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool isReadOnly = 16;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsreadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsreadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool isInsertRecord = 17;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsinsertrecord = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsinsertrecord = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool isView = 18;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsview = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsview = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool isDeleteable = 19;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsdeleteable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsdeleteable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool isDocument = 20;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsdocument = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsdocument = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool isChangeLog = 21;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIschangelog = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIschangelog = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional int32 accessLevel = 22;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getAccesslevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setAccesslevel = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string linkColumnName = 23;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getLinkcolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setLinkcolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string sortOrderColumnName = 24;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getSortordercolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setSortordercolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string sortYesNoColumnName = 25;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getSortyesnocolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setSortyesnocolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string parentColumnName = 26;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getParentcolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setParentcolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string displayLogic = 27;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getDisplaylogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setDisplaylogic = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string commitWarning = 28;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getCommitwarning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setCommitwarning = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string query = 29;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string whereClause = 30;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getWhereclause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setWhereclause = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string orderByClause = 31;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getOrderbyclause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setOrderbyclause = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string parentTabUuid = 32;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getParenttabuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setParenttabuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional ContextInfo contextInfo = 33;
 * @return {?proto.dictionary.ContextInfo}
 */
proto.dictionary.Tab.prototype.getContextinfo = function() {
  return /** @type{?proto.dictionary.ContextInfo} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ContextInfo, 33));
};


/**
 * @param {?proto.dictionary.ContextInfo|undefined} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setContextinfo = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearContextinfo = function() {
  return this.setContextinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.hasContextinfo = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * repeated Process processes = 34;
 * @return {!Array<!proto.dictionary.Process>}
 */
proto.dictionary.Tab.prototype.getProcessesList = function() {
  return /** @type{!Array<!proto.dictionary.Process>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Process, 34));
};


/**
 * @param {!Array<!proto.dictionary.Process>} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setProcessesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 34, value);
};


/**
 * @param {!proto.dictionary.Process=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Process}
 */
proto.dictionary.Tab.prototype.addProcesses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 34, opt_value, proto.dictionary.Process, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearProcessesList = function() {
  return this.setProcessesList([]);
};


/**
 * repeated Field fields = 35;
 * @return {!Array<!proto.dictionary.Field>}
 */
proto.dictionary.Tab.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.dictionary.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Field, 35));
};


/**
 * @param {!Array<!proto.dictionary.Field>} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 35, value);
};


/**
 * @param {!proto.dictionary.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Tab.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 35, opt_value, proto.dictionary.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional FieldGroup fieldGroup = 36;
 * @return {?proto.dictionary.FieldGroup}
 */
proto.dictionary.Tab.prototype.getFieldgroup = function() {
  return /** @type{?proto.dictionary.FieldGroup} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.FieldGroup, 36));
};


/**
 * @param {?proto.dictionary.FieldGroup|undefined} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setFieldgroup = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearFieldgroup = function() {
  return this.setFieldgroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.hasFieldgroup = function() {
  return jspb.Message.getField(this, 36) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 6, 0),
    columnname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    elementname: jspb.Message.getFieldWithDefault(msg, 8, ""),
    isdisplayed: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isdisplayedgrid: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isreadonly: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isallowcopy: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isencrypted: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    issameline: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    isheading: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    isfieldonly: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    isquickentry: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    ismandatory: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    iskey: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    isparent: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    isupdateable: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    isidentifier: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    isallowlogging: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    isselectioncolumn: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    isrange: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    isalwaysupdateable: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    istranslated: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    identifiersequence: jspb.Message.getFieldWithDefault(msg, 78, 0),
    displaylogic: jspb.Message.getFieldWithDefault(msg, 29, ""),
    displaytype: jspb.Message.getFieldWithDefault(msg, 30, 0),
    defaultvalue: jspb.Message.getFieldWithDefault(msg, 31, ""),
    readonlylogic: jspb.Message.getFieldWithDefault(msg, 32, ""),
    mandatorylogic: jspb.Message.getFieldWithDefault(msg, 33, ""),
    callout: jspb.Message.getFieldWithDefault(msg, 34, ""),
    columnsql: jspb.Message.getFieldWithDefault(msg, 35, ""),
    vformat: jspb.Message.getFieldWithDefault(msg, 36, ""),
    valuemin: jspb.Message.getFieldWithDefault(msg, 37, ""),
    valuemax: jspb.Message.getFieldWithDefault(msg, 38, ""),
    formatpattern: jspb.Message.getFieldWithDefault(msg, 39, ""),
    contextinfo: (f = msg.getContextinfo()) && proto.dictionary.ContextInfo.toObject(includeInstance, f),
    fieldgroup: (f = msg.getFieldgroup()) && proto.dictionary.FieldGroup.toObject(includeInstance, f),
    fielddefinition: (f = msg.getFielddefinition()) && proto.dictionary.FieldDefinition.toObject(includeInstance, f),
    reference: (f = msg.getReference()) && proto.dictionary.Reference.toObject(includeInstance, f),
    process: (f = msg.getProcess()) && proto.dictionary.Process.toObject(includeInstance, f),
    isquerycriteria: jspb.Message.getBooleanFieldWithDefault(msg, 45, false),
    isorderby: jspb.Message.getBooleanFieldWithDefault(msg, 46, false),
    seqnogrid: jspb.Message.getFieldWithDefault(msg, 47, 0),
    sortno: jspb.Message.getFieldWithDefault(msg, 48, 0),
    isinfoonly: jspb.Message.getBooleanFieldWithDefault(msg, 49, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 50, false),
    defaultvalueto: jspb.Message.getFieldWithDefault(msg, 51, ""),
    fieldlength: jspb.Message.getFieldWithDefault(msg, 52, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Field;
  return proto.dictionary.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequence(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementname(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdisplayed(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdisplayedgrid(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsreadonly(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsallowcopy(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsencrypted(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssameline(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsheading(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfieldonly(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsquickentry(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmandatory(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIskey(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsparent(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsupdateable(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsidentifier(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsallowlogging(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsselectioncolumn(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsrange(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsalwaysupdateable(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstranslated(value);
      break;
    case 78:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdentifiersequence(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaylogic(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplaytype(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultvalue(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setReadonlylogic(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setMandatorylogic(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallout(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnsql(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setVformat(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuemin(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuemax(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormatpattern(value);
      break;
    case 40:
      var value = new proto.dictionary.ContextInfo;
      reader.readMessage(value,proto.dictionary.ContextInfo.deserializeBinaryFromReader);
      msg.setContextinfo(value);
      break;
    case 41:
      var value = new proto.dictionary.FieldGroup;
      reader.readMessage(value,proto.dictionary.FieldGroup.deserializeBinaryFromReader);
      msg.setFieldgroup(value);
      break;
    case 42:
      var value = new proto.dictionary.FieldDefinition;
      reader.readMessage(value,proto.dictionary.FieldDefinition.deserializeBinaryFromReader);
      msg.setFielddefinition(value);
      break;
    case 43:
      var value = new proto.dictionary.Reference;
      reader.readMessage(value,proto.dictionary.Reference.deserializeBinaryFromReader);
      msg.setReference(value);
      break;
    case 44:
      var value = new proto.dictionary.Process;
      reader.readMessage(value,proto.dictionary.Process.deserializeBinaryFromReader);
      msg.setProcess(value);
      break;
    case 45:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsquerycriteria(value);
      break;
    case 46:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsorderby(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeqnogrid(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortno(value);
      break;
    case 49:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsinfoonly(value);
      break;
    case 50:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultvalueto(value);
      break;
    case 52:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldlength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getColumnname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getElementname();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIsdisplayed();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsdisplayedgrid();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsreadonly();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsallowcopy();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsencrypted();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIssameline();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIsheading();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getIsfieldonly();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIsquickentry();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsmandatory();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIskey();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getIsparent();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getIsupdateable();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getIsidentifier();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getIsallowlogging();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getIsselectioncolumn();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getIsrange();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getIsalwaysupdateable();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getIstranslated();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getIdentifiersequence();
  if (f !== 0) {
    writer.writeInt32(
      78,
      f
    );
  }
  f = message.getDisplaylogic();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getDisplaytype();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getDefaultvalue();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getReadonlylogic();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getMandatorylogic();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getCallout();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getColumnsql();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getVformat();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getValuemin();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getValuemax();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getFormatpattern();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getContextinfo();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.dictionary.ContextInfo.serializeBinaryToWriter
    );
  }
  f = message.getFieldgroup();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.dictionary.FieldGroup.serializeBinaryToWriter
    );
  }
  f = message.getFielddefinition();
  if (f != null) {
    writer.writeMessage(
      42,
      f,
      proto.dictionary.FieldDefinition.serializeBinaryToWriter
    );
  }
  f = message.getReference();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      proto.dictionary.Reference.serializeBinaryToWriter
    );
  }
  f = message.getProcess();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      proto.dictionary.Process.serializeBinaryToWriter
    );
  }
  f = message.getIsquerycriteria();
  if (f) {
    writer.writeBool(
      45,
      f
    );
  }
  f = message.getIsorderby();
  if (f) {
    writer.writeBool(
      46,
      f
    );
  }
  f = message.getSeqnogrid();
  if (f !== 0) {
    writer.writeInt32(
      47,
      f
    );
  }
  f = message.getSortno();
  if (f !== 0) {
    writer.writeInt32(
      48,
      f
    );
  }
  f = message.getIsinfoonly();
  if (f) {
    writer.writeBool(
      49,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      50,
      f
    );
  }
  f = message.getDefaultvalueto();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getFieldlength();
  if (f !== 0) {
    writer.writeInt32(
      52,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Field.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Field.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Field.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Field.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 sequence = 6;
 * @return {number}
 */
proto.dictionary.Field.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string columnName = 7;
 * @return {string}
 */
proto.dictionary.Field.prototype.getColumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setColumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string elementName = 8;
 * @return {string}
 */
proto.dictionary.Field.prototype.getElementname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setElementname = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool isDisplayed = 9;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsdisplayed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsdisplayed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool isDisplayedGrid = 10;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsdisplayedgrid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsdisplayedgrid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isReadOnly = 11;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsreadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsreadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isAllowCopy = 12;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsallowcopy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsallowcopy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool isEncrypted = 13;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsencrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsencrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool isSameLine = 14;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIssameline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIssameline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool isHeading = 15;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsheading = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsheading = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool isFieldOnly = 16;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsfieldonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsfieldonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool isQuickEntry = 17;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsquickentry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsquickentry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool isMandatory = 18;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsmandatory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsmandatory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool isKey = 19;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIskey = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIskey = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool isParent = 20;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsparent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsparent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool isUpdateable = 21;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsupdateable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsupdateable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool isIdentifier = 22;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsidentifier = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsidentifier = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool isAllowLogging = 23;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsallowlogging = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsallowlogging = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool isSelectionColumn = 24;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsselectioncolumn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsselectioncolumn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool isRange = 25;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsrange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsrange = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool isAlwaysUpdateable = 26;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsalwaysupdateable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsalwaysupdateable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool isTranslated = 27;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIstranslated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIstranslated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional int32 identifierSequence = 78;
 * @return {number}
 */
proto.dictionary.Field.prototype.getIdentifiersequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 78, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIdentifiersequence = function(value) {
  return jspb.Message.setProto3IntField(this, 78, value);
};


/**
 * optional string displayLogic = 29;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDisplaylogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDisplaylogic = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional int32 displayType = 30;
 * @return {number}
 */
proto.dictionary.Field.prototype.getDisplaytype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDisplaytype = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional string defaultValue = 31;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDefaultvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDefaultvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string readOnlyLogic = 32;
 * @return {string}
 */
proto.dictionary.Field.prototype.getReadonlylogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setReadonlylogic = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string mandatoryLogic = 33;
 * @return {string}
 */
proto.dictionary.Field.prototype.getMandatorylogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setMandatorylogic = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string callout = 34;
 * @return {string}
 */
proto.dictionary.Field.prototype.getCallout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setCallout = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string columnSQL = 35;
 * @return {string}
 */
proto.dictionary.Field.prototype.getColumnsql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setColumnsql = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string vFormat = 36;
 * @return {string}
 */
proto.dictionary.Field.prototype.getVformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setVformat = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string valueMin = 37;
 * @return {string}
 */
proto.dictionary.Field.prototype.getValuemin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setValuemin = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string valueMax = 38;
 * @return {string}
 */
proto.dictionary.Field.prototype.getValuemax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setValuemax = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string formatPattern = 39;
 * @return {string}
 */
proto.dictionary.Field.prototype.getFormatpattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setFormatpattern = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional ContextInfo contextInfo = 40;
 * @return {?proto.dictionary.ContextInfo}
 */
proto.dictionary.Field.prototype.getContextinfo = function() {
  return /** @type{?proto.dictionary.ContextInfo} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ContextInfo, 40));
};


/**
 * @param {?proto.dictionary.ContextInfo|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setContextinfo = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearContextinfo = function() {
  return this.setContextinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasContextinfo = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional FieldGroup fieldGroup = 41;
 * @return {?proto.dictionary.FieldGroup}
 */
proto.dictionary.Field.prototype.getFieldgroup = function() {
  return /** @type{?proto.dictionary.FieldGroup} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.FieldGroup, 41));
};


/**
 * @param {?proto.dictionary.FieldGroup|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setFieldgroup = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearFieldgroup = function() {
  return this.setFieldgroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasFieldgroup = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional FieldDefinition fieldDefinition = 42;
 * @return {?proto.dictionary.FieldDefinition}
 */
proto.dictionary.Field.prototype.getFielddefinition = function() {
  return /** @type{?proto.dictionary.FieldDefinition} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.FieldDefinition, 42));
};


/**
 * @param {?proto.dictionary.FieldDefinition|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setFielddefinition = function(value) {
  return jspb.Message.setWrapperField(this, 42, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearFielddefinition = function() {
  return this.setFielddefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasFielddefinition = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional Reference reference = 43;
 * @return {?proto.dictionary.Reference}
 */
proto.dictionary.Field.prototype.getReference = function() {
  return /** @type{?proto.dictionary.Reference} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Reference, 43));
};


/**
 * @param {?proto.dictionary.Reference|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setReference = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearReference = function() {
  return this.setReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasReference = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional Process process = 44;
 * @return {?proto.dictionary.Process}
 */
proto.dictionary.Field.prototype.getProcess = function() {
  return /** @type{?proto.dictionary.Process} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Process, 44));
};


/**
 * @param {?proto.dictionary.Process|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setProcess = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearProcess = function() {
  return this.setProcess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasProcess = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional bool isQueryCriteria = 45;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsquerycriteria = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 45, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsquerycriteria = function(value) {
  return jspb.Message.setProto3BooleanField(this, 45, value);
};


/**
 * optional bool isOrderBy = 46;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsorderby = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 46, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsorderby = function(value) {
  return jspb.Message.setProto3BooleanField(this, 46, value);
};


/**
 * optional int32 seqNoGrid = 47;
 * @return {number}
 */
proto.dictionary.Field.prototype.getSeqnogrid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setSeqnogrid = function(value) {
  return jspb.Message.setProto3IntField(this, 47, value);
};


/**
 * optional int32 sortNo = 48;
 * @return {number}
 */
proto.dictionary.Field.prototype.getSortno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setSortno = function(value) {
  return jspb.Message.setProto3IntField(this, 48, value);
};


/**
 * optional bool isInfoOnly = 49;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsinfoonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 49, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsinfoonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 49, value);
};


/**
 * optional bool isActive = 50;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 50, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 50, value);
};


/**
 * optional string defaultValueTo = 51;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDefaultvalueto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDefaultvalueto = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional int32 fieldLength = 52;
 * @return {number}
 */
proto.dictionary.Field.prototype.getFieldlength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 52, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setFieldlength = function(value) {
  return jspb.Message.setProto3IntField(this, 52, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ContextInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ContextInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ContextInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ContextInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    messagetext: (f = msg.getMessagetext()) && proto.dictionary.MessageText.toObject(includeInstance, f),
    sqlstatement: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ContextInfo}
 */
proto.dictionary.ContextInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ContextInfo;
  return proto.dictionary.ContextInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ContextInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ContextInfo}
 */
proto.dictionary.ContextInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new proto.dictionary.MessageText;
      reader.readMessage(value,proto.dictionary.MessageText.deserializeBinaryFromReader);
      msg.setMessagetext(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSqlstatement(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ContextInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ContextInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ContextInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ContextInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessagetext();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.dictionary.MessageText.serializeBinaryToWriter
    );
  }
  f = message.getSqlstatement();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.ContextInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional MessageText messageText = 5;
 * @return {?proto.dictionary.MessageText}
 */
proto.dictionary.ContextInfo.prototype.getMessagetext = function() {
  return /** @type{?proto.dictionary.MessageText} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.MessageText, 5));
};


/**
 * @param {?proto.dictionary.MessageText|undefined} value
 * @return {!proto.dictionary.ContextInfo} returns this
*/
proto.dictionary.ContextInfo.prototype.setMessagetext = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.clearMessagetext = function() {
  return this.setMessagetext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.ContextInfo.prototype.hasMessagetext = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string sqlStatement = 6;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getSqlstatement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setSqlstatement = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool isActive = 7;
 * @return {boolean}
 */
proto.dictionary.ContextInfo.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.MessageText.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.MessageText.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.MessageText} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.MessageText.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    msgtype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    msgtext: jspb.Message.getFieldWithDefault(msg, 5, ""),
    msgtip: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.MessageText}
 */
proto.dictionary.MessageText.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.MessageText;
  return proto.dictionary.MessageText.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.MessageText} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.MessageText}
 */
proto.dictionary.MessageText.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgtype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgtext(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgtip(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.MessageText.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.MessageText.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.MessageText} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.MessageText.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMsgtype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMsgtext();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMsgtip();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.MessageText.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string msgType = 4;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getMsgtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setMsgtype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string msgText = 5;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getMsgtext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setMsgtext = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string msgTip = 6;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getMsgtip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setMsgtip = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool isActive = 7;
 * @return {boolean}
 */
proto.dictionary.MessageText.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fieldgrouptype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldGroup}
 */
proto.dictionary.FieldGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldGroup;
  return proto.dictionary.FieldGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldGroup}
 */
proto.dictionary.FieldGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldgrouptype(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFieldgrouptype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.FieldGroup.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.FieldGroup.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.FieldGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string fieldGroupType = 4;
 * @return {string}
 */
proto.dictionary.FieldGroup.prototype.getFieldgrouptype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setFieldgrouptype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool isActive = 5;
 * @return {boolean}
 */
proto.dictionary.FieldGroup.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.FieldDefinition.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fieldgrouptype: jspb.Message.getFieldWithDefault(msg, 5, ""),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.dictionary.FieldCondition.toObject, includeInstance),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldDefinition}
 */
proto.dictionary.FieldDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldDefinition;
  return proto.dictionary.FieldDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldDefinition}
 */
proto.dictionary.FieldDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldgrouptype(value);
      break;
    case 6:
      var value = new proto.dictionary.FieldCondition;
      reader.readMessage(value,proto.dictionary.FieldCondition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFieldgrouptype();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.dictionary.FieldCondition.serializeBinaryToWriter
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.FieldDefinition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string fieldGroupType = 5;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getFieldgrouptype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setFieldgrouptype = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated FieldCondition conditions = 6;
 * @return {!Array<!proto.dictionary.FieldCondition>}
 */
proto.dictionary.FieldDefinition.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.dictionary.FieldCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.FieldCondition, 6));
};


/**
 * @param {!Array<!proto.dictionary.FieldCondition>} value
 * @return {!proto.dictionary.FieldDefinition} returns this
*/
proto.dictionary.FieldDefinition.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.dictionary.FieldCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.FieldCondition}
 */
proto.dictionary.FieldDefinition.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.dictionary.FieldCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};


/**
 * optional bool isActive = 7;
 * @return {boolean}
 */
proto.dictionary.FieldDefinition.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stylesheet: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldCondition}
 */
proto.dictionary.FieldCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldCondition;
  return proto.dictionary.FieldCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldCondition}
 */
proto.dictionary.FieldCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStylesheet(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStylesheet();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.FieldCondition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.FieldCondition.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string condition = 3;
 * @return {string}
 */
proto.dictionary.FieldCondition.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setCondition = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string stylesheet = 4;
 * @return {string}
 */
proto.dictionary.FieldCondition.prototype.getStylesheet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setStylesheet = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool isActive = 5;
 * @return {boolean}
 */
proto.dictionary.FieldCondition.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Process.repeatedFields_ = [11,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Process.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Process.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Process} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Process.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    help: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isreport: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    accesslevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    showhelp: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isdirectprint: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.dictionary.Field.toObject, includeInstance),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reportexporttypesList: jspb.Message.toObjectList(msg.getReportexporttypesList(),
    proto.dictionary.ReportExportType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Process}
 */
proto.dictionary.Process.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Process;
  return proto.dictionary.Process.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Process} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Process}
 */
proto.dictionary.Process.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsreport(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccesslevel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setShowhelp(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdirectprint(value);
      break;
    case 11:
      var value = new proto.dictionary.Field;
      reader.readMessage(value,proto.dictionary.Field.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 13:
      var value = new proto.dictionary.ReportExportType;
      reader.readMessage(value,proto.dictionary.ReportExportType.deserializeBinaryFromReader);
      msg.addReportexporttypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Process.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Process.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Process} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Process.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsreport();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getAccesslevel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getShowhelp();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsdirectprint();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.dictionary.Field.serializeBinaryToWriter
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReportexporttypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.dictionary.ReportExportType.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Process.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Process.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.Process.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dictionary.Process.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.dictionary.Process.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string help = 6;
 * @return {string}
 */
proto.dictionary.Process.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool isReport = 7;
 * @return {boolean}
 */
proto.dictionary.Process.prototype.getIsreport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setIsreport = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 accessLevel = 8;
 * @return {number}
 */
proto.dictionary.Process.prototype.getAccesslevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setAccesslevel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string showHelp = 9;
 * @return {string}
 */
proto.dictionary.Process.prototype.getShowhelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setShowhelp = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool isDirectPrint = 10;
 * @return {boolean}
 */
proto.dictionary.Process.prototype.getIsdirectprint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setIsdirectprint = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * repeated Field parameters = 11;
 * @return {!Array<!proto.dictionary.Field>}
 */
proto.dictionary.Process.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.dictionary.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Field, 11));
};


/**
 * @param {!Array<!proto.dictionary.Field>} value
 * @return {!proto.dictionary.Process} returns this
*/
proto.dictionary.Process.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.dictionary.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Process.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.dictionary.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};


/**
 * optional bool isActive = 12;
 * @return {boolean}
 */
proto.dictionary.Process.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * repeated ReportExportType reportExportTypes = 13;
 * @return {!Array<!proto.dictionary.ReportExportType>}
 */
proto.dictionary.Process.prototype.getReportexporttypesList = function() {
  return /** @type{!Array<!proto.dictionary.ReportExportType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.ReportExportType, 13));
};


/**
 * @param {!Array<!proto.dictionary.ReportExportType>} value
 * @return {!proto.dictionary.Process} returns this
*/
proto.dictionary.Process.prototype.setReportexporttypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.dictionary.ReportExportType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.ReportExportType}
 */
proto.dictionary.Process.prototype.addReportexporttypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.dictionary.ReportExportType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.clearReportexporttypesList = function() {
  return this.setReportexporttypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Form.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Form.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Form} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Form.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    accesslevel: jspb.Message.getFieldWithDefault(msg, 6, 0),
    filename: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Form}
 */
proto.dictionary.Form.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Form;
  return proto.dictionary.Form.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Form} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Form}
 */
proto.dictionary.Form.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccesslevel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Form.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Form.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Form} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Form.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAccesslevel();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Form.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Form.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Form.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Form.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Form.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 accessLevel = 6;
 * @return {number}
 */
proto.dictionary.Form.prototype.getAccesslevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setAccesslevel = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string fileName = 7;
 * @return {string}
 */
proto.dictionary.Form.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool isActive = 8;
 * @return {boolean}
 */
proto.dictionary.Form.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Browser.repeatedFields_ = [21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Browser.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Browser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Browser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Browser.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    help: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accesslevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    query: jspb.Message.getFieldWithDefault(msg, 9, ""),
    whereclause: jspb.Message.getFieldWithDefault(msg, 10, ""),
    orderbyclause: jspb.Message.getFieldWithDefault(msg, 11, ""),
    isupdateable: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isdeleteable: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isselectedbydefault: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    iscollapsiblebydefault: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    isexecutedquerybydefault: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    isshowtotal: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    viewuuid: jspb.Message.getFieldWithDefault(msg, 18, ""),
    window: (f = msg.getWindow()) && proto.dictionary.Window.toObject(includeInstance, f),
    process: (f = msg.getProcess()) && proto.dictionary.Process.toObject(includeInstance, f),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.dictionary.Field.toObject, includeInstance),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 22, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Browser}
 */
proto.dictionary.Browser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Browser;
  return proto.dictionary.Browser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Browser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Browser}
 */
proto.dictionary.Browser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccesslevel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhereclause(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderbyclause(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsupdateable(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdeleteable(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsselectedbydefault(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscollapsiblebydefault(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsexecutedquerybydefault(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtotal(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewuuid(value);
      break;
    case 19:
      var value = new proto.dictionary.Window;
      reader.readMessage(value,proto.dictionary.Window.deserializeBinaryFromReader);
      msg.setWindow(value);
      break;
    case 20:
      var value = new proto.dictionary.Process;
      reader.readMessage(value,proto.dictionary.Process.deserializeBinaryFromReader);
      msg.setProcess(value);
      break;
    case 21:
      var value = new proto.dictionary.Field;
      reader.readMessage(value,proto.dictionary.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Browser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Browser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Browser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Browser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAccesslevel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getWhereclause();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOrderbyclause();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIsupdateable();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsdeleteable();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsselectedbydefault();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIscollapsiblebydefault();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getIsexecutedquerybydefault();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIsshowtotal();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getViewuuid();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getWindow();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.dictionary.Window.serializeBinaryToWriter
    );
  }
  f = message.getProcess();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.dictionary.Process.serializeBinaryToWriter
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.dictionary.Field.serializeBinaryToWriter
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Browser.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string help = 6;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 accessLevel = 8;
 * @return {number}
 */
proto.dictionary.Browser.prototype.getAccesslevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setAccesslevel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string query = 9;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string whereClause = 10;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getWhereclause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setWhereclause = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string orderByClause = 11;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getOrderbyclause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setOrderbyclause = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool isUpdateable = 12;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsupdateable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsupdateable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool IsDeleteable = 13;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsdeleteable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsdeleteable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool IsSelectedByDefault = 14;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsselectedbydefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsselectedbydefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool IsCollapsibleByDefault = 15;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIscollapsiblebydefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIscollapsiblebydefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool IsExecutedQueryByDefault = 16;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsexecutedquerybydefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsexecutedquerybydefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool IsShowTotal = 17;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsshowtotal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsshowtotal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional string viewUuid = 18;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getViewuuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setViewuuid = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional Window window = 19;
 * @return {?proto.dictionary.Window}
 */
proto.dictionary.Browser.prototype.getWindow = function() {
  return /** @type{?proto.dictionary.Window} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Window, 19));
};


/**
 * @param {?proto.dictionary.Window|undefined} value
 * @return {!proto.dictionary.Browser} returns this
*/
proto.dictionary.Browser.prototype.setWindow = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.clearWindow = function() {
  return this.setWindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.hasWindow = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Process process = 20;
 * @return {?proto.dictionary.Process}
 */
proto.dictionary.Browser.prototype.getProcess = function() {
  return /** @type{?proto.dictionary.Process} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Process, 20));
};


/**
 * @param {?proto.dictionary.Process|undefined} value
 * @return {!proto.dictionary.Browser} returns this
*/
proto.dictionary.Browser.prototype.setProcess = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.clearProcess = function() {
  return this.setProcess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.hasProcess = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * repeated Field fields = 21;
 * @return {!Array<!proto.dictionary.Field>}
 */
proto.dictionary.Browser.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.dictionary.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Field, 21));
};


/**
 * @param {!Array<!proto.dictionary.Field>} value
 * @return {!proto.dictionary.Browser} returns this
*/
proto.dictionary.Browser.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.dictionary.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Browser.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.dictionary.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional bool isActive = 22;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ZoomWindow.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ZoomWindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ZoomWindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ZoomWindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    issotrx: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ZoomWindow}
 */
proto.dictionary.ZoomWindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ZoomWindow;
  return proto.dictionary.ZoomWindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ZoomWindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ZoomWindow}
 */
proto.dictionary.ZoomWindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssotrx(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ZoomWindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ZoomWindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ZoomWindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ZoomWindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIssotrx();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.ZoomWindow.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.ZoomWindow.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.ZoomWindow.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.ZoomWindow.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool isSOTrx = 5;
 * @return {boolean}
 */
proto.dictionary.ZoomWindow.prototype.getIssotrx = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setIssotrx = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool isActive = 6;
 * @return {boolean}
 */
proto.dictionary.ZoomWindow.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Reference.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Reference.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Reference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Reference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Reference.toObject = function(includeInstance, msg) {
  var f, obj = {
    tablename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keycolumnname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displaycolumnname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    query: jspb.Message.getFieldWithDefault(msg, 4, ""),
    directquery: jspb.Message.getFieldWithDefault(msg, 5, ""),
    validationcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    windowsList: jspb.Message.toObjectList(msg.getWindowsList(),
    proto.dictionary.ZoomWindow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Reference}
 */
proto.dictionary.Reference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Reference;
  return proto.dictionary.Reference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Reference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Reference}
 */
proto.dictionary.Reference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTablename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeycolumnname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaycolumnname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectquery(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationcode(value);
      break;
    case 7:
      var value = new proto.dictionary.ZoomWindow;
      reader.readMessage(value,proto.dictionary.ZoomWindow.deserializeBinaryFromReader);
      msg.addWindows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Reference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Reference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Reference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Reference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTablename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeycolumnname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplaycolumnname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDirectquery();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getValidationcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getWindowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.dictionary.ZoomWindow.serializeBinaryToWriter
    );
  }
};


/**
 * optional string tableName = 1;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getTablename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setTablename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string keyColumnName = 2;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getKeycolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setKeycolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string displayColumnName = 3;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getDisplaycolumnname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setDisplaycolumnname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string query = 4;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string directQuery = 5;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getDirectquery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setDirectquery = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string validationCode = 6;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getValidationcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setValidationcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated ZoomWindow windows = 7;
 * @return {!Array<!proto.dictionary.ZoomWindow>}
 */
proto.dictionary.Reference.prototype.getWindowsList = function() {
  return /** @type{!Array<!proto.dictionary.ZoomWindow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.ZoomWindow, 7));
};


/**
 * @param {!Array<!proto.dictionary.ZoomWindow>} value
 * @return {!proto.dictionary.Reference} returns this
*/
proto.dictionary.Reference.prototype.setWindowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.dictionary.ZoomWindow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.ZoomWindow}
 */
proto.dictionary.Reference.prototype.addWindows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.dictionary.ZoomWindow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.clearWindowsList = function() {
  return this.setWindowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ReportExportType.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ReportExportType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ReportExportType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReportExportType.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ReportExportType}
 */
proto.dictionary.ReportExportType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ReportExportType;
  return proto.dictionary.ReportExportType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ReportExportType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ReportExportType}
 */
proto.dictionary.ReportExportType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ReportExportType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ReportExportType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ReportExportType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReportExportType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dictionary.ReportExportType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReportExportType} returns this
 */
proto.dictionary.ReportExportType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.dictionary.ReportExportType.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReportExportType} returns this
 */
proto.dictionary.ReportExportType.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.dictionary.ReportExportType.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReportExportType} returns this
 */
proto.dictionary.ReportExportType.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.dictionary);
